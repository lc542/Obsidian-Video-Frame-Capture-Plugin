/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var T=Object.create;var l=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var C=Object.getPrototypeOf,D=Object.prototype.hasOwnProperty;var E=(a,t)=>{for(var o in t)l(a,o,{get:t[o],enumerable:!0})},g=(a,t,o,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of N(t))!D.call(a,r)&&r!==o&&l(a,r,{get:()=>t[r],enumerable:!(e=$(t,r))||e.enumerable});return a};var v=(a,t,o)=>(o=a!=null?T(C(a)):{},g(t||!a||!a.__esModule?l(o,"default",{value:a,enumerable:!0}):o,a)),M=a=>g(l({},"__esModule",{value:!0}),a);var V={};E(V,{default:()=>p});module.exports=M(V);var n=require("obsidian"),c=v(require("fs")),d=v(require("path")),p=class extends n.Plugin{async onload(){this.addCommand({id:"capture-video-frame",name:"Capture current frame from video",hotkeys:[{modifiers:["Alt"],key:"t"}],callback:async()=>this.captureFrameJS()})}async captureFrameJS(){console.log("captureFrameJS() called");let t=this.app.workspace.getActiveViewOfType(n.MarkdownView);if(!t){new n.Notice("No active markdown view.");return}let o=t.editor,e=document.querySelector(".markdown-preview-view video");if(!e){new n.Notice("No video element found in current note preview.");return}console.log("Found video element",e),e.readyState<2&&await new Promise(i=>e.addEventListener("loadeddata",i,{once:!0})),e.paused&&(e.play(),await new Promise(i=>setTimeout(i,40)),e.pause());let m=e.parentElement;if(m){let i=document.createElement("div");i.style.width=e.clientWidth+"px",i.style.height=e.clientHeight+"px",m.replaceChild(i,e),m.offsetHeight,m.replaceChild(e,i),await new Promise(x=>requestAnimationFrame(()=>setTimeout(x,50)))}let s=document.createElement("canvas");s.width=e.videoWidth,s.height=e.videoHeight;let f=s.getContext("2d");if(!f){new n.Notice("Failed to create canvas context.");return}f.drawImage(e,0,0,s.width,s.height);let y=s.toDataURL("image/png").replace(/^data:image\/png;base64,/,""),w=o.getValue().match(/!\[\[([^\]]+\.mp4)\]\]/);if(!w){new n.Notice("No embedded video found in note.");return}let S=w[1],F=d.basename(S,".mp4"),P=this.formatTimestamp(e.currentTime),b=this.app.vault.adapter.basePath,u=d.join(b,"output");c.existsSync(u)||c.mkdirSync(u);let h=`${F}_${P}.png`,k=d.join(u,h);try{c.writeFileSync(k,y,"base64"),o.replaceSelection(`![[output/${h}]]
    `),new n.Notice(`Frame saved: output/${h}`)}catch(i){console.error("Failed to write image:",i),new n.Notice("Failed to save image. See console for details.")}}formatTimestamp(t){let o=Math.floor(t/3600).toString().padStart(2,"0"),e=Math.floor(t%3600/60).toString().padStart(2,"0"),r=Math.floor(t%60).toString().padStart(2,"0");return`${o}-${e}-${r}`}onunload(){console.log("Unloading VideoFrameCapturePlugin")}};
    